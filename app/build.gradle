plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}

// 读取 local.properties 配置
def getLocalProperty(String key) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty(key)
}

android {
    namespace 'com.hailong.plantknow'
    compileSdk 34

    // 添加这行来启用 BuildConfig 功能
    buildFeatures {
        buildConfig = true
    }

    defaultConfig {
        applicationId "com.hailong.plantknow"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        // 注入 BAIDU_API_TOKEN
        buildConfigField "String", "BAIDU_API_TOKEN", "\"${getLocalProperty('BAIDU_API_TOKEN')}\""
        buildConfigField "String", "BAIDU_API_KEY", "\"${getLocalProperty('API_KEY')}\""
        buildConfigField "String", "BAIDU_SECRET_KEY", "\"${getLocalProperty('SECRET_KEY')}\""
        // 定义 BuildConfig 字段
        buildConfigField "String", "API_BASE_URL", "\"${getLocalProperty('API_BASE_URL') ?: ''}\""
        // 注入ALI
        buildConfigField "String", "ALI_API_KEY", "\"${getLocalProperty('ALI_API_KEY')}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {

    implementation platform("androidx.compose:compose-bom:2023.10.01")
    androidTestImplementation platform("androidx.compose:compose-bom:2023.10.01")

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.0'

    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-graphics"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.material3:material3"
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.32.0"
    // Provide Android XML Material3 styles (Theme.Material3.*)
    implementation 'com.google.android.material:material:1.10.0'

    implementation 'io.coil-kt:coil-compose:2.4.0'
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"

    // 网络相关依赖
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.14.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"

    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
    // Gson Converter for Retrofit (用于将 JSON 转为 Kotlin 对象)
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation("androidx.compose.material3:material3:1.3.0")

//    implementation("io.insert-koin:koin-androidx-compose:3.5.3") // Compose 支持
}